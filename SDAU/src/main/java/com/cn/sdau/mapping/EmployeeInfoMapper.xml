<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.sdau.dao.EmployeeInfoMapper">
	<resultMap id="BaseResultMap" type="com.cn.sdau.pojo.EmployeeInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="department_id" property="departmentId"
			jdbcType="INTEGER" />
		<result column="employee_no" property="employeeNo" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="duty" property="duty" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="INTEGER" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUser" jdbcType="INTEGER" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="SelectByEmpInfo_Where">
		<if test="employeeNo != null and employeeNo != ''">
			AND ei.employee_no LIKE CONCAT('%',#{employeeNo},'%')
		</if>
		<if test="name != null and name != ''">
			AND ei.name LIKE CONCAT('%',#{name},'%')
		</if>
		<if test="phone !=null and phone != ''">
			AND ei.phone LIKE CONCAT('%',#{phone},'%')
		</if>
		<if test="address != null and address != ''">
			AND ei.address LIKE CONCAT('%',#{address},'%')
		</if>
	</sql>
	
	<select id="selectByEmpInfo" resultMap="BaseResultMap"
		parameterType="com.cn.sdau.pojo.EmployeeInfo">
		SELECT
			di.full_name department_name,
			ei.*
		FROM
			employee_info ei
		LEFT JOIN department_info di ON di.id = ei.department_id
		WHERE
			1=1
		<include refid="SelectByEmpInfo_Where"></include>
		LIMIT #{limit}
		OFFSET #{offset}
	</select>
	
	<select id="selectByEmpInfoCount" resultType="java.lang.Integer"
			parameterType="com.cn.sdau.pojo.EmployeeInfo">
		SELECT COUNT(1)
		FROM
			employee_info ei
		LEFT JOIN department_info di ON di.id = ei.department_id
		WHERE
			1=1
		<include refid="SelectByEmpInfo_Where"></include>
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, department_id, employee_no, name, duty, phone, address, remark,
		create_user,
		create_date, update_user, update_date
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.cn.sdau.pojo.EmployeeInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from employee_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from employee_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.cn.sdau.pojo.EmployeeInfoExample">
		delete from employee_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.cn.sdau.pojo.EmployeeInfo">
		insert into employee_info (id, department_id, employee_no,
		name, duty, phone,
		address, remark, create_user,
		create_date, update_user, update_date
		)
		values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER},
		#{employeeNo,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{duty,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{createUser,jdbcType=INTEGER},
		#{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.cn.sdau.pojo.EmployeeInfo">
		insert into employee_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="departmentId != null">
				department_id,
			</if>
			<if test="employeeNo != null">
				employee_no,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="duty != null">
				duty,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="departmentId != null">
				#{departmentId,jdbcType=INTEGER},
			</if>
			<if test="employeeNo != null">
				#{employeeNo,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="duty != null">
				#{duty,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.cn.sdau.pojo.EmployeeInfoExample"
		resultType="java.lang.Integer">
		select count(*) from employee_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update employee_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.departmentId != null">
				department_id = #{record.departmentId,jdbcType=INTEGER},
			</if>
			<if test="record.employeeNo != null">
				employee_no = #{record.employeeNo,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.duty != null">
				duty = #{record.duty,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.createUser != null">
				create_user = #{record.createUser,jdbcType=INTEGER},
			</if>
			<if test="record.createDate != null">
				create_date = #{record.createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateUser != null">
				update_user = #{record.updateUser,jdbcType=INTEGER},
			</if>
			<if test="record.updateDate != null">
				update_date = #{record.updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update employee_info
		set id = #{record.id,jdbcType=INTEGER},
		department_id = #{record.departmentId,jdbcType=INTEGER},
		employee_no = #{record.employeeNo,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		duty = #{record.duty,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		create_user = #{record.createUser,jdbcType=INTEGER},
		create_date = #{record.createDate,jdbcType=TIMESTAMP},
		update_user = #{record.updateUser,jdbcType=INTEGER},
		update_date = #{record.updateDate,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.sdau.pojo.EmployeeInfo">
		update employee_info
		<set>
			<if test="departmentId != null">
				department_id = #{departmentId,jdbcType=INTEGER},
			</if>
			<if test="employeeNo != null">
				employee_no = #{employeeNo,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="duty != null">
				duty = #{duty,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.sdau.pojo.EmployeeInfo">
		update employee_info
		set department_id = #{departmentId,jdbcType=INTEGER},
		employee_no = #{employeeNo,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		duty = #{duty,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		create_user = #{createUser,jdbcType=INTEGER},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_user = #{updateUser,jdbcType=INTEGER},
		update_date = #{updateDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>