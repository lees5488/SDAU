<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.sdau.dao.IUserDao">
	<resultMap id="BaseResultMap" type="com.cn.sdau.pojo.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="create_date_str" property="createDateStr" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="update_date_str" property="updateDateStr" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="INTEGER" />
		<result column="update_user" property="updateUser" jdbcType="INTEGER" />
		<result column="create_user_str" property="createUserStr" jdbcType="VARCHAR" />
		<result column="update_user_str" property="updateUserStr" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, user_name, password,age,address,phone,
		date_format(create_date,#{sqlDateTimeFormat}) create_date_str,
		date_format(update_date,#{sqlDateTimeFormat}) update_date_str,
		create_user,update_date,update_user
	</sql>

	<!-- 根据主键查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_t
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据用户名查询 -->
	<select id="selectByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from user_t
		where user_name = #{userName,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询条件 -->
	<sql id="selectByWhere">
		1=1
		<if test="id != null and id != ''">
			and a.id = #{id}
		</if>
		<if test="userName != null and userName != ''">
			and a.user_name like CONCAT('%',#{userName},'%')
		</if>
		<if test="password != null and password != ''">
			and a.password = #{password}
		</if>
		<if test="age != null and age != ''">
			and a.age = #{age}
		</if>
		<if test="address != null and address != ''">
			and a.address CONCAT('%',#{address},'%')
		</if>
		<if test="phone != null and phone != ''">
			and a.phone CONCAT('%',#{phone},'%')
		</if>
	</sql>

	<!-- 按条件查询用户 -->
	<select id="selectBy" resultMap="BaseResultMap" parameterType="com.cn.sdau.pojo.User">
		SELECT
			a.id,
			a.user_name,
			a.PASSWORD,
			a.age,
			a.address,
			a.phone,
			date_format(
				a.create_date,
				'%Y-%m-%d %H:%i:%S'
			) create_date_str,
			date_format(
				a.update_date,
				'%Y-%m-%d %H:%i:%S'
			) update_date_str,
			a.create_date,
			a.create_user,
		    b.user_name create_user_str,
		    a.update_date,
		    a.update_user,
		    c.user_name update_user_str
		FROM
			user_t a
		LEFT JOIN user_t b ON a.create_user = b.id
		LEFT JOIN user_t c ON a.update_user = c.id
		<where>
			<include refid="selectByWhere"></include>
		</where>
		limit #{limit}
		offset #{offset}
	</select>

	<!-- 按条件查询用户（计数） -->
	<select id="selectByCount" parameterType="com.cn.sdau.pojo.User"
		resultType="java.lang.Integer">
		select
		count(1)
		from user_t a
		<where>
			<include refid="selectByWhere"></include>
		</where>
	</select>

	<!-- 全选用户 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="com.cn.sdau.pojo.User">
		select
		<include refid="Base_Column_List"></include>
		from user_t
	</select>

	<!-- 全选用户（计数） -->
	<select id="selectAllCount" resultType="java.lang.Integer">
		select
		count(1)
		from user_t
	</select>

	<!-- 根据主键删除 -->
	<delete id="deleteByCondition" parameterType="com.cn.sdau.pojo.User">
		delete from user_t
		where user_name = #{userName}
	</delete>

	<insert id="insert" parameterType="com.cn.sdau.pojo.User">
		insert into user_t (id,
		user_name, password,
		age)
		values (#{id,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER})
	</insert>

	<!-- 新增用户 -->
	<insert id="insertSelective" parameterType="com.cn.sdau.pojo.User">
		insert into user_t
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="age != null">
				age,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	<!-- 修改用户 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.sdau.pojo.User">
		update user_t
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 通过主键修改用户所有 -->
	<update id="updateByPrimaryKey" parameterType="com.cn.sdau.pojo.User">
		update user_t
		set
		user_name = #{userName,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>